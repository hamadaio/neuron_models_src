
xopen("neuron__imp.hoc")

access soma
area(0.5)
distance()

proc geom_nseg() {
	
	soma area(0.5) // make sure diam reflects 3d points
	forall {nseg = int((L/(0.1*lambda_f(300))+0.9)/2)*2+1}
	
	}
	
forsec axonal{
	delete_section()

}


//--------------------------------------------------------------
//  Initialise user-defined membrane parameters 
// --------------------------------------------------------------

proc parameters() {

	celsius = 33		// makes AP amplitude larger â€¦. could have been the rec. temperature.
	Ri = 150	    			
	Cm = 1.2	     		
	Rm = 25000			// 25000 for L5 pyramidal neurons. see Kole et al.
	//Cm_myelin = 0.05     
	//Rm_myelin = 35000	
	v_init = -68		
	spinescale = 1					
}



// ----------------------------------------------------------------------------
// Channel densities
//-----------------------------------------------------------------------------


na_max		=	10000		// pS/um2
na_prox		=	4000
na_node		=	4000
na_collat	=	500
na_soma		=	1000				
na_dend		=	20 						
na_myelin	=	40
nap_soma	= 	0.2
nap_axon	=	0.1

ih_axon		=	0.0001

max_distance_apic	=	500		
max_distance_basal	=	100		

vShift_na		=	20 	// Vhalf = -20	
vShift_inact_na		=	16 	// Vhalf = -55	
q10_na			=	3
q10h_na			=	2	// original value 3

vShift_nax		=	10	
vShift_inact_nax	=	7	//Vhalf = -73	
q10_nax			=	3.0
q10h_nax		=	3	

vShift_nais		=	8 	// Vhalf = -36
vShift_inact_nais	=	14	// Vhalf = -61		
q10_nais		=	3.0
q10h_nais		=	3	


length_constant_Kv_and_Kv1	=	40	
Kv_soma	 	=	40	
Kv_dend	 	=	10		
		

Kv1_dend	=	20			
Kv1_ais		=	2000
Kv1_prox	=	500
Kv1_node	=	3000 		
Kv1_soma	=	150  
Kv1_collat	=	300

vShift_Kv1		=	10
vShift_inact_Kv1	=	-15
speed_Kv1		=	1


XE = 1.0

proc drug () {

Kv7_dend	=	8 * XE
Kv7_soma	=	8 * XE  	
Kv7_collat	=	8 * XE
Kv7_prox	=	8 * XE	
Kv7_ais		=	80 * XE
Kv7_myelin	=	8 * XE
Kv7_node	=	80 * XE

}

gca_dend	=	2.2 
gca_soma	=	2.0 
gca_ais		=	0.00

git2_ais	=	0.0
git2_dend	=	4.0 
git2_apic	=	4.0 
git2_soma	=	4.0 

gkca_soma	=	0.1 
gkca_dend	=	0.1 
gkca_ais	=	0.1 

gCa_HVA_apic_hot_fac=	1	//ca
gCa_LVAst_apic_hot_fac=	1	//it2
gCa_hot_start	=	1000 	// scaled double distance (human)
gCa_hot_end	=	1100 	// scaled double distance (human)

//ih parameters

A 	= 0.0001 
tau 	= 0.002

// ----------------------------------------------------------------------------
// Initialisation of passive and active properties, spine scaling, Rm and Cm
// ----------------------------------------------------------------------------

proc init_channels() {

//all		
	forall {
		insert pas 	 
		Ra 	= Ri 
		e_pas 	= v_init
		g_pas 	= 1/Rm
		cm 	= Cm
	}

// dendrites
	forsec basal {
		 {
		
			g_pas=1/(Rm/spinescale)
			cm=Cm*spinescale 
			
			insert na 	gbar_na=na_dend*spinescale
			insert nap	gbar_nap=nap_soma		
			insert Kv 	gbar_Kv=Kv_dend*spinescale 		
			insert Kv7 	gbar_Kv7=Kv7_dend*spinescale
			insert kca 	gbar_kca = gkca_dend*spinescale
			insert cad 
			insert ca 	gbar_ca = gca_dend*spinescale
			insert it2 	gcabar_it2 = git2_dend*spinescale
			insert Kv1	gbar_Kv1 = Kv1_dend*spinescale
		}			 
	}
	
	forsec  apical {
		 {
		
			g_pas=1/(Rm/spinescale)
			cm=Cm*spinescale

			insert na 	gbar_na=na_dend*spinescale
			insert nap	gbar_nap=nap_soma			
			insert Kv 	gbar_Kv=Kv_dend*spinescale 		
			insert Kv7 	gbar_Kv7=Kv7_soma*spinescale
			insert kca 	gbar_kca = gkca_dend*spinescale
			insert cad 
			insert ca 	gbar_ca = gca_dend*spinescale
			insert it2 	gcabar_it2 = git2_apic*spinescale
			insert Kv1	gbar_Kv1 = Kv1_dend*spinescale
		}			 
	}

//soma	
	soma  {
		nseg=15
		e_pas=v_init
		}
	soma  {
		insert na 	gbar_na = na_soma
		insert nap	gbar_nap = nap_soma	
		insert Kv 	gbar_Kv = Kv_soma
		insert ca 	gbar_ca = gca_soma
		insert kca 	gbar_kca = gkca_soma
		insert cad
		insert it2	gcabar_it2 = git2_dend
		insert Kv7 	gbar_Kv7 = Kv7_soma
		insert Kv1 	gbar_Kv1 = Kv1_soma
	} 		
	


//bridging axon piece requires high segmentation
	
		//axon[0].diam = 2.7
		//xon[0].nseg = 9

//the axon initial segment
	//axon[0]  {
		//nseg = 21
		//L = 30.5
		//e_pas=v_init	
		//insert nais 	gbar_nais(0:1.0) 	= na_max:na_max
				//gbar_nais(0.2:0.8)	= na_max:na_max
				//gbar_nais(0.8:1) 	= na_max:na_prox
		//insert nap	gbar_nap 		= nap_axon	
		//insert Kv1 	gbar_Kv1(0:1)	 	= Kv1_prox:Kv1_ais
		//insert Kv7 	gbar_Kv7(0:0.4) 	= Kv7_prox:Kv7_prox
				//gbar_Kv7(0.4:1) 	= Kv7_prox:Kv7_ais
		//insert cad 
		//insert ca 	gbar_ca = gca_ais
		//insert it2 	gcabar_it2 = git2_ais
		//insert kca	gbar_kca = gkca_ais
		
	//}

	
	//forsec collateral {	
			
			//g_pas=1/Rm
			//e_pas=-80
			//cm=Cm
			//insert Kv7 gbar_Kv7 = Kv7_collat
			//insert nax gbar_nax = na_collat
			//insert Kv1 gbar_Kv1 = Kv1_collat
	
			//}	



	//forsec myelin {

			//g_pas=1/Rm_myelin
			//e_pas=-80
			//cm=Cm_myelin
			//Ra=Ri			
			//insert nax gbar_nax  = na_myelin
			//insert Kv7 gbar_Kv7 = Kv7_myelin
			//insert Kv1 gbar_Kv1 = 0		
			//}	



	//forsec node {
			//g_pas=1/Rm
			//e_pas=-80
			//cm=Cm
			//insert nax gbar_nax = na_node
			//insert Kv1 gbar_Kv1 = Kv1_node
			//insert Kv7 gbar_Kv7 = Kv7_node
	//}	


			
forall ena	=	55
forall ek	=	-85

// ---------------------------------------------------------------------
// Calcium enhancement to reproduce frequency effect (Larkum et al,1999)
// ----------------------------------------------------------------------

	forall { 	
		vh1_it2    = 56
		vh2_it2    = 415
		ah_it2     = 30				
		v12m_it2   = 45
		v12h_it2   = 65  
		am_it2     = 3
		vshift_it2 = 10
		vm1_it2    = 50
		vm2_it2    = 125
	}

	forall if(ismembrane("ca_ion")) {
		eca = 140
		ion_style("ca_ion",0,1,0,0,0)
		vshift_ca = 8
	} 

	forall 	{
		caix_kca  = 0.7  	// Ca-sensitivity of Kca channel
		Ra_kca    = 1  	// Activation rate Kca 
		Rb_kca    = 2.5	// inactivation rate Kca, important ! 
		taur_cad = 80    	// Calcium extrusion rate, in ms 
	}


//possibility to implement hot-zone
	access soma
	area(0.5)
	distance()
	
//apical dendrites
	forsec apical  {
		 {
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				if(distance(pos) > gCa_hot_start && distance(pos) < gCa_hot_end) {
					gbar_ca(pos)	=	gca_dend*gCa_HVA_apic_hot_fac*spinescale
					gcabar_it2(pos)	=	git2_apic*gCa_LVAst_apic_hot_fac*spinescale
				}
			}
		}
	}
// --------------------------------------------------------------------------
// Dendritic exponential distribution of Ih (Kole et al., 2006)
// --------------------------------------------------------------------------
			 
	

	

forall {
		insert ih
		gh_ih=0 	//offset conductance  
		eh_ih=-45		 
	} 
		
	access soma
	area(0.5)
	distance()


	//basal dendrites

	forsec basal {
		 {
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				gbar_ih(pos)=(gh_ih+(A*(exp(tau*distance(pos)))))*spinescale	
			}
		}
	}

	//apical dendrites

	forsec apical {
		 {
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				gbar_ih(pos)=(gh_ih+(A*(exp(tau*distance(pos)))))*spinescale	
			}
		}
	}
	//soma {gbar_ih = 0.0002}	

	soma {gbar_ih = 0.0001}
	
	//forsec axonal  {
		//{gbar_ih=ih_axon
		//	}
	//}

	//forsec collateral {	
			// {
			//gbar_ih=0.0001
			//gbar_ih=0.001
	
		//}
	//}	


// --------------------------------------------------------------------------
// Dendritic linear distribution of na (Keren et al., 2009, JPhysiol, 587:1413-37)
// --------------------------------------------------------------------------

	access soma
	area(0.5)
	distance()
		



//basal dendrites
	forsec basal  {
		{
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				if (distance(pos) >= max_distance_basal)  {
					gbar_na(pos)=na_dend*spinescale	
				} else {
					gbar_na(pos)=(na_dend+(na_soma-na_dend)*(1-(distance(pos)/max_distance_basal)))*spinescale	
				}
			}
		}
	}




//apical dendrites
	forsec apical  {
		 {
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				if (distance(pos) >= max_distance_apic)  {
					gbar_na(pos)=na_dend*spinescale	
				} else {
					gbar_na(pos)=(na_dend+(na_soma-na_dend)*(1-(distance(pos)/max_distance_apic)))*spinescale	
				}
			}
		}
	}


//except for apical obliques

	//for i=60,73 {
	//	apic[i] {
	//		for j=1,nseg {
	//			pos=0.5/nseg+(j-1)/nseg
	//			if (distance(pos) >= max_distance_basal)  {
	//				gbar_na(pos)=na_dend*spinescale	
	//			} else {
	//				gbar_na(pos)=(na_dend+(na_soma-na_dend)*(1-(distance(pos)/max_distance_basal)))*spinescale	
	//			}
	//		}
	//	}
	//}


// --------------------------------------------------------------------------
// Dendritic linear distribution of Kv and Kv1 (Keren et al., 2009, JPhysiol, 587:1413-37)
// --------------------------------------------------------------------------

	access soma
	area(0.5)
	distance()
		
//basal dendrites
	forsec basal  {
		{
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				gbar_Kv(pos)=(Kv_dend+(Kv_soma-Kv_dend)*exp(-distance(pos)/length_constant_Kv_and_Kv1))*spinescale	
				gbar_Kv1(pos)=(Kv1_dend+(Kv1_soma-Kv1_dend)*exp(-distance(pos)/length_constant_Kv_and_Kv1))*spinescale	
			}
		}
	}

//apical dendrites
	forsec apical  {
		{
			for j=1,nseg {
				pos=0.5/nseg+(j-1)/nseg
				gbar_Kv(pos)=(Kv_dend+(Kv_soma-Kv_dend)*exp(-distance(pos)/length_constant_Kv_and_Kv1))*spinescale	
				gbar_Kv1(pos)=(Kv1_dend+(Kv1_soma-Kv1_dend)*exp(-distance(pos)/length_constant_Kv_and_Kv1))*spinescale	
			}
		}
	}


}




